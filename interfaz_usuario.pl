% interfaz_usuario.pl
% Men√∫ y gesti√≥n de interacci√≥n con el usuario

:- set_prolog_flag(encoding, utf8).
:- set_prolog_flag(file_encoding, utf8).

% Punto de arranque
inicio :-
    writeln("üéØ Bienvenido al sistema experto de t√©cnicas de muestreo"),
    loop_menu.

% Bucle del men√∫ principal
loop_menu :-
    repeat,
    nl,
    writeln("üìã Men√∫ principal"),
    writeln("1. Ingresar caracter√≠sticas de la poblaci√≥n"),
    writeln("2. Mostrar datos ingresados"),
    writeln("3. Ver t√©cnica de muestreo recomendada"),
    writeln("4. Calcular tama√±o de muestra"),
    writeln("5. Mostrar glosario"),
    writeln("6. Ver recomendaciones generales"),
    writeln("7. Limpiar datos ingresados"),
    writeln("8. Salir"),
    write("Seleccione una opci√≥n (1-8): "), flush_output,
    read(Op),
    opcion_menu(Op),
    Op == 8, !.

% Opciones del men√∫
opcion_menu(1) :- ingresar_datos.
opcion_menu(2) :- mostrar_datos.
opcion_menu(3) :-
    (   catch(recomendar_tecnica, _, fail)
    ->  true
    ;   writeln('‚ö†Ô∏è  No se pudo determinar una t√©cnica adecuada. Revisa los datos ingresados.')
    ).
opcion_menu(4) :- calcular_muestra.
opcion_menu(5) :- mostrar_glosario.
opcion_menu(6) :- mostrar_recomendaciones.
opcion_menu(7) :- reset_datos, writeln("‚úÖ Datos limpiados.").
opcion_menu(8) :- writeln("üëã Saliendo. ¬°Hasta luego!").
opcion_menu(_) :- writeln("‚ùå Opci√≥n inv√°lida. Intenta de nuevo.").

% Ingreso de datos
ingresar_datos :-
    writeln("Por favor, responda solo 'si' o 'no' a las siguientes preguntas:"),
    reset_datos,
    preguntar("¬øCuenta con marco muestral? (si/no):", tiene_marco_muestral),
    preguntar("¬øLa poblaci√≥n es homog√©nea? (si/no):", poblacion_homogenea),
    preguntar("¬øLa poblaci√≥n es heterog√©nea? (si/no):", poblacion_heterogenea),
    preguntar("¬øLa poblaci√≥n es amplia? (si/no):", poblacion_amplia),
    preguntar("¬øTiene lista ordenada? (si/no):", lista_ordenada),
    preguntar("¬øSe busca rapidez? (si/no):", busca_rapidez),
    writeln("‚úÖ Caracter√≠sticas registradas."),
    verificar_inconsistencias.

% Mostrar datos ingresados
mostrar_datos :-
    writeln("\nüîç Datos ingresados:"),
    (tiene_marco_muestral -> writeln("- Cuenta con marco muestral.") ; true),
    (poblacion_homogenea -> writeln("- Poblaci√≥n homog√©nea.") ; true),
    (poblacion_heterogenea -> writeln("- Poblaci√≥n heterog√©nea.") ; true),
    (poblacion_amplia -> writeln("- Poblaci√≥n amplia.") ; true),
    (lista_ordenada -> writeln("- Tiene lista ordenada.") ; true),
    (busca_rapidez -> writeln("- Busca rapidez.") ; true),
    nl.

% Lectura validada de respuestas 'si'/'no'
preguntar(Preg, Hecho) :-
    write(Preg), flush_output,
    leer_respuesta(Resp),
    (Resp == "si" -> assertz(Hecho) ; true).

leer_respuesta(Resp) :-
    read_line_to_string(user_input, Raw),
    string_lower(Raw, L),
    ( member(L, ["si","no"]) -> Resp = L
    ; writeln("Por favor, responde 'si' o 'no'."), leer_respuesta(Resp)
    ).

% Limpiar hechos ingresados
reset_datos :-
    retractall(tiene_marco_muestral),
    retractall(poblacion_homogenea),
    retractall(poblacion_heterogenea),
    retractall(poblacion_amplia),
    retractall(lista_ordenada),
    retractall(busca_rapidez).

verificar_inconsistencias :-
    poblacion_homogenea,
    poblacion_heterogenea,
    writeln("‚ö†Ô∏è Advertencia: La poblaci√≥n no puede ser homog√©nea y heterog√©nea a la vez."),
    !.

verificar_inconsistencias.
